<Application x:Class="MediaCenter.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MediaCenter" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors">
    <Application.Resources>
        <FontFamily x:Key="Font">Motiva Sans</FontFamily>
        <!--#region  Colors -->
        <SolidColorBrush x:Key="global_color" Color="#2a4161" />
        <SolidColorBrush x:Key="GlassColor" Color="{Binding Source={x:Static SystemParameters.WindowGlassColor}}" />
        <SolidColorBrush x:Key="SliderBar" Color="#2a4161" />
        <SolidColorBrush x:Key="BarColor" Color="#DEC63D" />
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <!--#endregion-->
        
        <!--#region  Buttons and other-->
        <VisualBrush x:Key="Banner" AlignmentX="Center" AlignmentY="Center" Stretch="None">
            <VisualBrush.Visual>
                <Label Content="Поиск трека или исполнителя" Foreground="#555" FontSize="16"/>
            </VisualBrush.Visual>
        </VisualBrush>
        <DrawingImage x:Key="back_a">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V1024 H1024 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M1024,1024z M0,0z M224,480L864,480A32,32,0,1,1,864,544L224,544A32,32,0,0,1,224,480z" />
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M1024,1024z M0,0z M237.248,512L502.656,777.344A32,32,0,0,1,457.344,822.656L169.344,534.656A32,32,0,0,1,169.344,489.344L457.344,201.344A32,32,0,1,1,502.656,246.656L237.248,512z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="close_b">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V1024 H1024 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M1024,1024z M0,0z M764.288,214.592L512,466.88 259.712,214.592A31.936,31.936,0,0,0,214.592,259.712L466.752,512 214.528,764.224A31.936,31.936,0,1,0,259.648,809.408L512,557.184 764.288,809.472A31.936,31.936,0,0,0,809.408,764.352L557.12,512.064 809.408,259.712A31.936,31.936,0,1,0,764.288,214.528z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="play">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V1024 H1024 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F0 M1024,1024z M0,0z M716.8,512L332.8,256 332.8,768z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>   
        <DrawingImage x:Key="pause">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V1024 H1024 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F0 M1024,1024z M0,0z M307.2,256L460.8,256 460.8,768 307.2,768 307.2,256z M563.2,768L716.8,768 716.8,256 563.2,256 563.2,768z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="play_skip_back">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V512 H512 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M512,512z M0,0z M143.47,64L143.47,64 143.47,227.52 416,64 416,448 143.47,284.48 143.47,448 96,448 96,64 143.47,64z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="play_skip_next">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V512 H512 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M512,512z M0,0z M368.53,64L368.53,64 368.53,227.52 96,64 96,448 368.53,284.48 368.53,448 416,448 416,64 368.53,64z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="playpause_thumb">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F0 M24,24z M0,0z M2,21L2,3C2,2.17595468,2.94076375,1.70557281,3.6,2.2L15.6,11.2C16.1333333,11.6,16.1333333,12.4,15.6,12.8L3.6,21.8C2.94076375,22.2944272,2,21.8240453,2,21z M4,19L13.3333333,12 4,5 4,19z M22,22L20,22 20,2 22,2 22,22z M19,22L17,22 17,2 19,2 19,22z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="next_thumb">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <DrawingGroup Opacity="1">
                        <DrawingGroup Opacity="1">
                            <GeometryDrawing Geometry="F0 M24,24z M0,0z M15.3371,12.4218L5.76844,18.511C5.43558,18.7228,5,18.4837,5,18.0892L5,5.91084C5,5.51629,5.43558,5.27718,5.76844,5.48901L15.3371,11.5782C15.6459,11.7746,15.6459,12.2254,15.3371,12.4218z">
                                <GeometryDrawing.Pen>
                                    <Pen Brush="GhostWhite" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Miter" MiterLimit="1" />
                                </GeometryDrawing.Pen>
                            </GeometryDrawing>
                            <GeometryDrawing>
                                <GeometryDrawing.Pen>
                                    <Pen Brush="GhostWhite" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Miter" MiterLimit="1" />
                                </GeometryDrawing.Pen>
                                <GeometryDrawing.Geometry>
                                    <LineGeometry StartPoint="19,5" EndPoint="19,19" />
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="prev_thumb">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <DrawingGroup Opacity="1">
                        <DrawingGroup Opacity="1">
                            <GeometryDrawing Geometry="F0 M24,24z M0,0z M8.66288,12.4218L18.2316,18.511C18.5644,18.7228,19,18.4837,19,18.0892L19,5.91084C19,5.51629,18.5644,5.27718,18.2316,5.48901L8.66288,11.5782C8.35413,11.7746,8.35413,12.2254,8.66288,12.4218z">
                                <GeometryDrawing.Pen>
                                    <Pen Brush="GhostWhite" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Miter" MiterLimit="1" />
                                </GeometryDrawing.Pen>
                            </GeometryDrawing>
                            <GeometryDrawing>
                                <GeometryDrawing.Pen>
                                    <Pen Brush="GhostWhite" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Miter" MiterLimit="1" />
                                </GeometryDrawing.Pen>
                                <GeometryDrawing.Geometry>
                                    <LineGeometry StartPoint="5,5" EndPoint="5,19" />
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="menu" x:Name="menu_img">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V32 H32 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M32,32z M0,0z M8,15L15,15 15,8 8,8 8,15z M17,8L17,15 24,15 24,8 17,8z M17,24L24,24 24,17 17,17 17,24z M8,24L15,24 15,17 8,17 8,24z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="add_music">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing Geometry="F1 M24,24z M0,0z M15,12L12,12 M12,12L9,12 M12,12L12,9 M12,12L12,15 M17,21L7,21C4.79086,21,3,19.2091,3,17L3,7C3,4.79086,4.79086,3,7,3L17,3C19.2091,3,21,4.79086,21,7L21,17C21,19.2091,19.2091,21,17,21z">
                        <GeometryDrawing.Pen>
                            <Pen Brush="GhostWhite" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Miter" MiterLimit="1" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="reload">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V16 H16 V0 H0 Z">
                    <DrawingGroup.Transform>
                        <TranslateTransform X="0" Y="0.010539717972278595" />
                    </DrawingGroup.Transform>
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M16,16z M0,0z M7.248,1.307A0.75,0.75,0,1,1,8.252,0.193L10.752,2.443A0.75,0.75,0,0,1,10.752,3.557L8.252,5.807A0.75,0.75,0,0,1,7.248,4.693L8.538,3.532A4.5,4.5,0,1,0,12.193,6.364A0.75,0.75,0,1,1,13.591,5.818A6,6,0,1,1,8.018,2L7.248,1.307z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="volume_max">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M24,24z M0,0z M2,17L5.638,17 11.36,21.769A1,1,0,0,0,12,22A0.989,0.989,0,0,0,12.424,21.905A1,1,0,0,0,13,21L13,3A1,1,0,0,0,11.36,2.231L5.638,7 2,7A1,1,0,0,0,1,8L1,16A1,1,0,0,0,2,17z M3,9L6,9A1,1,0,0,0,6.64,8.769L11,5.135 11,18.865 6.64,15.231A1,1,0,0,0,6,15L3,15z M23,12A1,1,0,0,1,22,13L18,13A1,1,0,0,1,18,11L22,11A1,1,0,0,1,23,12z M20.707,4.707L16.707,8.707A1,1,0,0,1,15.293,7.293L19.293,3.293A1,1,0,1,1,20.707,4.707z M16.707,15.293L20.707,19.293A1,1,0,1,1,19.293,20.707L15.293,16.707A1,1,0,0,1,16.707,15.293z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="volume">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V32 H32 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M32,32z M0,0z M23.325,28.934L14.945,23.094 14.945,9.843 23.325,4.066C24.43,4.066,26.014,4.902,26.014,5.933L26.014,27.066C26.015,28.098,24.431,28.934,23.325,28.934z M14.013,22.898L7.986,22.898C6.881,22.898,5.986,21.576,5.986,20.544L5.986,12.454C5.986,11.424,6.882,9.959,7.986,9.959L14.013,9.959 14.013,22.898z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="not_like">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V32 H32 V0 H0 Z">
                    <GeometryDrawing Geometry="F1 M32,32z M0,0z M16.842,3.548L20.132,10.532C20.269,10.822,20.533,11.023,20.839,11.07L28.196,12.19C28.966,12.307,29.273,13.298,28.716,13.867L23.392,19.303C23.171,19.529,23.07,19.854,23.122,20.173L24.379,27.849C24.51,28.652,23.706,29.265,23.017,28.885L16.437,25.261C16.164,25.11,15.837,25.11,15.564,25.261L8.984,28.885C8.296,29.264,7.491,28.652,7.622,27.849L8.879,20.173C8.931,19.854,8.83,19.529,8.609,19.303L3.285,13.867C2.728,13.298,3.035,12.307,3.805,12.19L11.162,11.07C11.468,11.023,11.732,10.822,11.869,10.532L15.159,3.548C15.503,2.817,16.497,2.817,16.842,3.548z">
                        <GeometryDrawing.Pen>
                            <Pen Brush="Gold" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" MiterLimit="10" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="like">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V32 H32 V0 H0 Z">
                    <GeometryDrawing Brush="Gold" Geometry="F1 M32,32z M0,0z M29.895,12.52C29.66,11.816,29.066,11.311,28.346,11.201L21.037,10.106 17.747,3.122C17.42,2.43 16.751,2 16,2 15.249,2 14.58,2.43 14.253,3.122L11.011,10.081 3.654,11.201C2.934,11.311 2.341,11.816 2.105,12.52 1.864,13.243 2.042,14.027 2.57,14.566L7.891,20.012 6.634,27.688C6.509,28.455 6.819,29.206 7.445,29.647 8.047,30.074 8.821,30.116 9.465,29.761L15.954,26.137 22.535,29.761C23.181,30.116 23.953,30.072 24.555,29.647 25.181,29.206 25.492,28.455 25.366,27.688L24.107,20.002 29.43,14.566C29.958,14.027,30.136,13.243,29.895,12.52z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="save">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing Brush="GhostWhite" Geometry="F0 M24,24z M0,0z M9.163,2.819C9,3.139,9,3.559,9,4.4L9,11 7.803,11C6.92,11,6.478,11,6.269,11.176A0.75,0.75,0,0,0,6.003,11.796C6.02,12.07,6.325,12.389,6.934,13.028L11.132,17.429C11.434,17.747,11.585,17.905,11.762,17.964A0.749,0.749,0,0,0,12.238,17.964C12.415,17.905,12.566,17.747,12.868,17.429L17.066,13.029C17.676,12.389,17.98,12.069,17.996,11.796A0.75,0.75,0,0,0,17.731,11.176C17.522,11,17.081,11,16.197,11L15,11 15,4.4C15,3.56,15,3.14,14.836,2.819A1.5,1.5,0,0,0,14.181,2.163C13.861,2,13.441,2,12.6,2L11.4,2C10.56,2,10.14,2,9.819,2.163A1.5,1.5,0,0,0,9.163,2.819z M5,21A1,1,0,0,0,6,22L18,22A1,1,0,1,0,18,20L6,20A1,1,0,0,0,5,21z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="playlist_play">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V48 H48 V0 H0 Z">
                    <DrawingGroup Opacity="1">
                        <GeometryDrawing Brush="#DEC63D" Geometry="F1 M48,48z M0,0z M24,2A22,22,0,1,0,46,24A22,22,0,0,0,24,2z" />
                        <GeometryDrawing Brush="GhostWhite" Geometry="F1 M48,48z M0,0z M19.4,33.1L19.4,14.9A1,1,0,0,1,21,14.08L34.23,23.18A1,1,0,0,1,34.23,24.83L21,33.92A1,1,0,0,1,19.4,33.1z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="playlist_pause">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing Geometry="F1 M24,24z M0,0z M11.9707,22C17.4936,22 21.9707,17.5228 21.9707,12 21.9707,6.47715 17.4936,2 11.9707,2 6.44786,2 1.9707,6.47715 1.9707,12 1.9707,17.5228 6.44786,22 11.9707,22z">
                        <GeometryDrawing.Brush>
                            <SolidColorBrush Color="#DEC63D" Opacity="1" />
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M24,24z M0,0z M10.72,15.0298L10.72,8.9698C10.72,8.4898,10.52,8.2998,10.01,8.2998L8.71,8.2998C8.2,8.2998,8,8.4898,8,8.9698L8,15.0298C8,15.5098,8.2,15.6998,8.71,15.6998L10,15.6998C10.52,15.6998,10.72,15.5098,10.72,15.0298z" />
                    <GeometryDrawing Brush="GhostWhite" Geometry="F1 M24,24z M0,0z M15.9991,15.0298L15.9991,8.9698C15.9991,8.4898,15.7991,8.2998,15.2891,8.2998L13.9991,8.2998C13.4891,8.2998,13.2891,8.4898,13.2891,8.9698L13.2891,15.0298C13.2891,15.5098,13.4891,15.6998,13.9991,15.6998L15.2891,15.6998C15.7991,15.6998,15.9991,15.5098,15.9991,15.0298z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="compact_mode">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <DrawingGroup Opacity="1">
                        <GeometryDrawing Brush="GhostWhite" Geometry="F1 M24,24z M0,0z M12.4,13.533L17.4,20.2A0.5,0.5,0,0,1,17,21L7,21A0.5,0.5,0,0,1,6.6,20.2L11.6,13.533A0.5,0.5,0,0,1,12.4,13.533z M18,19L18,17 20,17 20,5 4,5 4,17 6,17 6,19 2.992,19A0.994,0.994,0,0,1,2,18L2,4C2,3.448,2.455,3,2.992,3L21.008,3C21.556,3,22,3.445,22,4L22,18C22,18.552,21.545,19,21.008,19L18,19z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="logo">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing Brush="#FF000000">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry RadiusX="2" RadiusY="2" Rect="2,2,20,20" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#FF2CA9BC" Geometry="F1 M24,24z M0,0z M16.84,9.75A5,5,0,0,0,12,6A1,1,0,0,0,11,7L11,12.18A3,3,0,1,0,13,15L13,8.17A3,3,0,0,1,14.9,10.25A1,1,0,1,0,16.84,9.75z" />
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="close_over">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V511.999 H511.999 V0 H0 Z">
                    <GeometryDrawing Brush="#FFFF6465" Geometry="F1 M511.999,511.999z M0,0z M464.612,0L47.386,0C21.216,0,0,21.216,0,47.386L0,464.612C0,490.784,21.216,511.998,47.386,511.998L464.612,511.998C490.782,511.998,511.998,490.782,511.998,464.612L511.998,47.386C512,21.216,490.784,0,464.612,0z" />
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M511.999,511.999z M0,0z M371.949,193.255L371.949,193.255 318.744,140.051 255.999,202.796 193.255,140.051 140.051,193.255 202.796,255.999 140.051,318.744 193.255,371.949 255.999,309.204 318.744,371.949 371.949,318.744 309.204,255.999z" />
                    <GeometryDrawing Geometry="F1 M511.999,511.999z M0,0z M63.521,464.612L63.521,47.386C63.521,21.216,84.736,0,110.907,0L47.386,0C21.216,0,0,21.216,0,47.386L0,464.612C0,490.782,21.216,511.998,47.386,511.998L110.907,511.998C84.736,512,63.521,490.784,63.521,464.612z">
                        <GeometryDrawing.Brush>
                            <SolidColorBrush Color="#FF000000" Opacity="0.1" />
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="close">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V511.999 H511.999 V0 H0 Z">
                    <GeometryDrawing Brush="#2a4161" Geometry="F1 M511.999,511.999z M0,0z M464.612,0L47.386,0C21.216,0,0,21.216,0,47.386L0,464.612C0,490.784,21.216,511.998,47.386,511.998L464.612,511.998C490.782,511.998,511.998,490.782,511.998,464.612L511.998,47.386C512,21.216,490.784,0,464.612,0z" />
                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M511.999,511.999z M0,0z M371.949,193.255L371.949,193.255 318.744,140.051 255.999,202.796 193.255,140.051 140.051,193.255 202.796,255.999 140.051,318.744 193.255,371.949 255.999,309.204 318.744,371.949 371.949,318.744 309.204,255.999z" />
                    <GeometryDrawing Geometry="F1 M511.999,511.999z M0,0z M63.521,464.612L63.521,47.386C63.521,21.216,84.736,0,110.907,0L47.386,0C21.216,0,0,21.216,0,47.386L0,464.612C0,490.782,21.216,511.998,47.386,511.998L110.907,511.998C84.736,512,63.521,490.784,63.521,464.612z">
                        <GeometryDrawing.Brush>
                            <SolidColorBrush Color="#FF000000" Opacity="0.1" />
                        </GeometryDrawing.Brush>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="empty_poster">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M-25.25,-25.25 V80.14 H80.14 V-25.25 H-25.25 Z">
                    <DrawingGroup.Transform>
                        <TranslateTransform X="25.25" Y="25.25" />
                    </DrawingGroup.Transform>
                    <DrawingGroup Opacity="1">
                        <GeometryDrawing Brush="{StaticResource global_color}">
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry RadiusX="2.1078" RadiusY="2.1078" Rect="-25.25,-25.25,105.39,105.39" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                    <DrawingGroup Opacity="1">
                        <GeometryDrawing Brush="#FFF2EEED" Geometry="F1 M105.39,105.39z M0,0z M52.104,0.249C51.888,0.06,51.603,-0.026,51.315,0.00800000000000001L20.315,4.019C19.816,4.084,19.443,4.508,19.443,5.011L19.443,11.028 19.443,15.24 19.443,41.275C17.706,39.285 14.997,38 11.944,38 6.697,38 2.444,41.781 2.444,46.444 2.444,51.107 6.697,54.888 11.944,54.888 17.191,54.888 21.444,51.107 21.444,46.444 21.444,46.112 21.417,45.786 21.375,45.463 21.415,45.355 21.444,45.242 21.444,45.12L21.444,16.118 50.444,12.365 50.444,31.274C48.706,29.285 45.997,28 42.944,28 37.697,28 33.444,31.781 33.444,36.444 33.444,41.107 37.697,44.888 42.944,44.888 48.191,44.888 52.444,41.107 52.444,36.444 52.444,36.352 52.432,36.263 52.429,36.172 52.431,36.145 52.444,36.122 52.444,36.095L52.444,11.227 52.444,7.016 52.444,1C52.444,0.712,52.32,0.438,52.104,0.249z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="shuffle">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V512 H512 V0 H0 Z">
                    <DrawingGroup Opacity="1">
                        <GeometryDrawing Brush="GhostWhite" Geometry="F1 M512,512z M0,0z M418.972,324.766C416.133,322.66 412.33,322.407 409.224,324.129 406.143,325.862 404.362,329.231 404.675,332.758L407.299,363.085C392.93,360.871 380.148,357.224 368.547,352.423 349.099,344.335 332.589,332.939 317.328,318.738 307.171,309.279 297.639,298.567 288.469,286.942 280.767,277.157 273.353,266.676 266.012,255.868 277.709,238.719 289.672,222.532 302.55,208.355 312.298,197.572 322.576,187.933 333.647,179.677 346.307,170.253 360.003,162.612 375.673,156.98 385.325,153.526 395.795,150.866 407.3,149.109L404.676,179.243C404.363,182.77 406.144,186.139 409.225,187.872 412.331,189.594 416.133,189.341 418.973,187.235L508.391,120.803C510.654,119.095 512.002,116.423 512.002,113.583 512.002,110.742 510.654,108.071 508.391,106.374L418.972,39.93C416.133,37.824 412.33,37.572 409.224,39.305 406.143,41.025 404.362,44.407 404.675,47.922L407.635,81.979C384.215,84.603 362.794,90.091 343.419,98.095 315.571,109.563 292.128,125.906 272.222,144.379 258.936,156.715 247.143,169.989 236.36,183.6 233.038,187.812 229.837,192.049 226.684,196.297 223.532,192.049 220.33,187.801 217.009,183.589 206.249,169.978 194.479,156.679 181.218,144.331 161.337,125.823 137.892,109.455 110.069,97.962 82.269,86.421 50.304,79.922 14.152,79.946L0,79.946 0,146.51 14.152,146.51C39.208,146.522 59.836,150.374 77.743,156.799 93.412,162.443 107.083,170.11 119.744,179.557 130.792,187.813 141.045,197.464 150.818,208.26 163.67,222.461 175.584,238.659 187.283,255.821 179.941,266.616 172.503,277.086 164.778,286.857 155.607,298.483 146.052,309.182 135.894,318.629 120.611,332.806 104.1,344.178 84.628,352.253 65.131,360.281 42.483,365.178 14.153,365.203L0,365.203 0,431.754 14.152,431.754C46.116,431.778 74.831,426.712 100.272,417.529 122.56,409.537 142.249,398.418 159.578,385.469 174.742,374.145 188.124,361.423 200.182,348.077 209.714,337.511 218.427,326.548 226.611,315.488 234.771,326.559 243.459,337.536 252.991,348.102 265.049,361.472 278.408,374.204 293.572,385.553 310.876,398.527 330.542,409.659 352.806,417.686 369.655,423.775 387.923,428.023 407.612,430.238L404.675,464.079C404.362,467.594 406.143,470.975 409.224,472.696 412.33,474.43 416.132,474.176 418.972,472.07L508.39,405.627C510.653,403.93 512.001,401.26 512.001,398.419 512.001,395.579 510.653,392.895 508.39,391.197L418.972,324.766z" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="repeate">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing Geometry="F1 M24,24z M0,0z M14,3L16.44,5.34003 8.48999,5.32001C4.91999,5.32001 1.98999,8.25003 1.98999,11.84 1.98999,13.63 2.71999,15.26 3.89999,16.44">
                        <GeometryDrawing.Pen>
                            <Pen Brush="GhostWhite" Thickness="1.5" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" MiterLimit="1" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Geometry="F1 M24,24z M0,0z M10.0001,21.0001L7.56006,18.66 15.5101,18.6801C19.0801,18.6801 22.0101,15.75 22.0101,12.16 22.0101,10.37 21.2801,8.74006 20.1001,7.56006">
                        <GeometryDrawing.Pen>
                            <Pen Brush="GhostWhite" Thickness="1.5" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" MiterLimit="1" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Geometry="F1 M24,24z M0,0z M12.25,14.67L12.25,9.33008 10.75,11.0001">
                        <GeometryDrawing.Pen>
                            <Pen Brush="GhostWhite" Thickness="1.5" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" MiterLimit="1" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="check">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing>
                        <GeometryDrawing.Pen>
                            <Pen Brush="#2a4161" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" MiterLimit="1" />
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry RadiusX="2" RadiusY="2" Rect="3,3,18,18" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Geometry="F1 M24,24z M0,0z M7,13L10,16 17,9">
                        <GeometryDrawing.Pen>
                            <Pen Brush="#2a4161" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" MiterLimit="1" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="uncheck">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                    <GeometryDrawing>
                        <GeometryDrawing.Pen>
                            <Pen Brush="#2a4161" Thickness="2" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" MiterLimit="1" />
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry RadiusX="2" RadiusY="2" Rect="3,3,18,18" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <!--#endregion-->
        
        <!--#region storyboards-->
        <Storyboard x:Key="Storyboard" BeginTime="00:00:00.000" Duration="00:00:10.000">
            <DoubleAnimation Storyboard.TargetName="menu_img" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                             From="0" To="360" BeginTime="00:00:05.000" Duration="00:00:05.000" />
            <!--<DoubleAnimation Storyboard.TargetName="OpacityImage" 
                             Storyboard.TargetProperty="Opacity" 
                             From="1" To="0" Duration="00:00:10.000" />-->
        </Storyboard>
        <Storyboard x:Key="rotate_90">
            <DoubleAnimation Storyboard.TargetName="image" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                             From="0" To="90"  Duration="00:00:00.300" />
        </Storyboard>
        <Storyboard x:Key="rotate_0">
            <DoubleAnimation Storyboard.TargetName="image" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                             From="90" To="0"  Duration="00:00:00.300" />
        </Storyboard>
        <Storyboard x:Key="collapse">
            <DoubleAnimation
                             Storyboard.TargetName="main_menu_panel"
                             Storyboard.TargetProperty="(DockPanel.Width)" 
                             From="200" To="30"
                             Duration="0:0:0.3"/>
            <DoubleAnimation
                             Storyboard.TargetName="version_panel"
                             Storyboard.TargetProperty="(StackPanel.Width)" 
                             From="200" To="0"
                             Duration="0:0:0.1"/>
        </Storyboard>
        <Storyboard x:Key="expand">
            <DoubleAnimation
                             Storyboard.TargetName="main_menu_panel"
                             Storyboard.TargetProperty="(DockPanel.Width)" 
                             From="30" To="200"
                             Duration="0:0:0.3"/>
            <DoubleAnimation
                             Storyboard.TargetName="version_panel"
                             Storyboard.TargetProperty="(StackPanel.Width)" 
                             From="0" To="200"
                             Duration="0:0:0.1"/>
        </Storyboard>
        <Storyboard x:Key="single_poster_mode">
            <DoubleAnimation
                             Storyboard.TargetName="single_poster"
                             Storyboard.TargetProperty="(DockPanel.Height)" 
                             From="0" To="700"
                             Duration="0:0:0.150"/>
            <DoubleAnimation
                             Storyboard.TargetName="center_panel"
                             Storyboard.TargetProperty="(DockPanel.Height)" 
                             From="700" To="0"
                             Duration="0:0:0.150"/>
            <DoubleAnimation 
                             Storyboard.TargetName="Spectrum"
                             Storyboard.TargetProperty="(Grid.Height)"
                             From="0" To="100"
                             Duration="0:0:0.1"/>
            <DoubleAnimation 
                             Storyboard.TargetName="Reflection"
                             Storyboard.TargetProperty="(Grid.Height)"
                             From="0" To="70"
                             Duration="0:0:0.1"/>
        </Storyboard>
        <Storyboard x:Key="single_playlist_mode">
            <DoubleAnimation
                             Storyboard.TargetName="single_poster"
                             Storyboard.TargetProperty="(DockPanel.Height)" 
                             From="700" To="0"
                             Duration="0:0:0.150"/>
            <DoubleAnimation
                             Storyboard.TargetName="center_panel"
                             Storyboard.TargetProperty="(DockPanel.Height)" 
                             From="0" To="700"
                             Duration="0:0:0.150"/>
            <DoubleAnimation 
                             Storyboard.TargetName="Spectrum"
                             Storyboard.TargetProperty="(Grid.Height)"
                             From="100" To="0"
                             Duration="0:0:0.150"/>
            <DoubleAnimation 
                             Storyboard.TargetName="Reflection"
                             Storyboard.TargetProperty="(Grid.Height)"
                             From="70" To="0"
                             Duration="0:0:0.150"/>
        </Storyboard>
        <Storyboard x:Key="poster_hover">
            <DoubleAnimation 
                            Storyboard.TargetName="poster_image"
                            Storyboard.TargetProperty="(Image.Width)"
                            From="150" To="180"
                            Duration="0:0:0.3">                 
            </DoubleAnimation>
        </Storyboard>
        <!--#endregion-->
        
        <!--#region  Styles-->            
        <Style x:Key="Logo" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="26" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
            </Style.Setters>
        </Style>
        <Style x:Key="SearchBox"  TargetType="TextBox">
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="{StaticResource Font}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0.2" />
            <Setter Property="BorderBrush" Value="#444" />
            <Setter Property="Opacity" Value="0.8" />
            
            <Style.Triggers>
                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource Banner}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource Banner}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="ItemsControl.Background" Value="Transparent" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0.1" />
                </Trigger>
            </Style.Triggers>
         </Style>
        <Style x:Key="Volume" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="Tahoma"/>
            </Style.Setters>
        </Style>
        <Style x:Key="Caption" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="30" />
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Padding" Value="10,0,0,0" />
            </Style.Setters>
        </Style>
        <Style x:Key="Title" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Margin" Value="10,0,0,0" />
            </Style.Setters>
        </Style>
        <Style x:Key="Artist" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Margin" Value="10,0,0,0" />
            </Style.Setters>
        </Style>
        <Style x:Key="Album" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
            </Style.Setters>
        </Style>
        <Style x:Key="Duration" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
            </Style.Setters>
        </Style>
        <Style x:Key="SongPanel_Title" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="18" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Padding" Value="0,0,0,0" />
            </Style.Setters>
        </Style>
        <Style x:Key="SongPanel_Artist" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Padding" Value="0,0,0,0" />
            </Style.Setters>
        </Style>
        <Style x:Key="MenuButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border 
                                    Opacity="1"
                                    Name="border">
                                <!--<Border.Effect>
                                    <DropShadowEffect BlurRadius="5" ShadowDepth="1" Direction="290" />
                                </Border.Effect>-->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="1" x:Name="content"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="content" Property="Opacity" Value="1"/>
                                    <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                    <Setter TargetName="border" Property="Background" Value="#222"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#111"/>
                                    <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="Foreground" Value="SandyBrown"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="SandyBrown"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Silver"/>
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#202020"/>
                    <Setter Property="Foreground" Value="#303030"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>
        <Style x:Key="AddMenuButton" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    CornerRadius="4">

                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#444444"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Foreground" Value="SandyBrown"/>
                    <Setter Property="BorderBrush" Value="#202020" />
                    <Setter Property="BorderThickness" Value="0.5" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Silver"/>
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#202020"/>
                    <Setter Property="Foreground" Value="#303030"/>
                </Trigger>
            </Style.Triggers>
        </Style>                   
        <Style x:Key="SystemButtons" TargetType="Button">
            <Style.Setters>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <Grid>
                                    <Image x:Name="image" Source="{StaticResource close}"/>   
                                </Grid>                                   
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Content" Value="X"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="image" Property="Source" Value="{StaticResource close_over}"/>
                                        <Setter Property="ToolTip" Value="Закрыть приложение"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Content" Value="X"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="image" Property="Source" Value="{StaticResource close}"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>                    
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#111111"/>
                    <Setter Property="Foreground" Value="#333333"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PlayListButtons" TargetType="Button">             
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter />
                        </ControlTemplate>                          
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Controls" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" x:Name="border" Opacity="{TemplateBinding Opacity}" CornerRadius="4" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.Effect>
                                    <DropShadowEffect Direction="290" ShadowDepth="1" Color="#111" BlurRadius="5">
                                        <DropShadowEffect.RenderingBias>
                                           Performance
                                        </DropShadowEffect.RenderingBias>
                                    </DropShadowEffect>
                                </Border.Effect>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#222" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                                    <Setter Property="Opacity" TargetName="border" Value="0.8" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="#222"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#202020" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#262626"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#151515"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CompactControls" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                    Opacity="0.9" 
                                    Padding="5"
                                    x:Name="border" 
                                    CornerRadius="12"
                                    BorderThickness="1"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.Effect>
                                    <DropShadowEffect Direction="290" ShadowDepth="1" Color="Black" BlurRadius="15">
                                        <DropShadowEffect.RenderingBias>
                                            Performance
                                        </DropShadowEffect.RenderingBias>
                                    </DropShadowEffect>
                                </Border.Effect>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{Binding SetColor}" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#202020" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#262626"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#151515"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SideMenuBtn" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}"
                                    Opacity="0.9" 
                                    Padding="0"
                                    x:Name="border" 
                                    CornerRadius="2"
                                    BorderThickness="0"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.Effect>
                                    <DropShadowEffect Direction="290" ShadowDepth="1" Color="Black" BlurRadius="15">
                                        <DropShadowEffect.RenderingBias>
                                            Performance
                                        </DropShadowEffect.RenderingBias>
                                    </DropShadowEffect>
                                </Border.Effect>
                                <Border x:Name="clip" RenderTransformOrigin="0.5,0.5" Width="32" Height="32">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                
                                <Border.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Border.RenderTransform> 
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="Transparent" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="Transparent"/>                                      
                                </Trigger>
                                <EventTrigger RoutedEvent="Button.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="clip" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                             From="0" To="90"  Duration="00:00:00.300" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Button.MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="clip" 
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" 
                             From="90" To="0"  Duration="00:00:00.300" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                               
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#202020" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#262626"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#151515"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Time" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="GhostWhite" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Opacity" Value="1" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontFamily" Value="{StaticResource Font}" />
            </Style.Setters>
        </Style>
        <Style x:Key="ButtonBorder" TargetType="Border">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
            </Style.Setters>
        </Style>
        <Style x:Key="PlayList" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Opacity" Value="1" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
            <Setter Property="ItemsSource" Value="{Binding Content.ItemsSource}" />
            <Setter Property="SelectedItem" Value="{Binding SelectedMusic}" />
            <Setter Property="SelectedIndex" Value="{Binding SelectedMusicIndex}" />
            <Setter Property="Width" Value="Auto" />
        </Style>
        <Style x:Key="AddToFavPlaying" TargetType="Button">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Image x:Name="like_state" Source="{x:Null}" Width="24" Height="24">
                                <Image.Effect>
                                    <DropShadowEffect BlurRadius="15" ShadowDepth="1" Direction="290" Color="Gold" />
                                </Image.Effect>
                            </Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding PlayingMusic.Liked}" Value="True">
                                <Setter TargetName="like_state" Property="Source" Value="{StaticResource like}"  />
                                <Setter Property="ToolTip" Value="Удалить из ''Мне нравится''" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PlayingMusic.Liked}" Value="False">
                                <Setter TargetName="like_state" Property="Source" Value="{StaticResource not_like}"  />
                                <Setter Property="ToolTip" Value="Добавить в ''Мне нравится''" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PlayingMusic.Type}" Value="Radio">
                                <Setter TargetName="like_state" Property="Source" Value="{x:Null}" />
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PlayingMusic.Location}" Value="Local">
                                <Setter TargetName="like_state" Property="Source" Value="{x:Null}" />
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#region ScrollBar-->
        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="{StaticResource GlassColor}" Points="3,15 15,15 9,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="{StaticResource GlassColor}" Points="3,3 9,15 15,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Fill="{StaticResource GlassColor}" Margin="2"></Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>
        <!--#endregion-->
        <Style x:Key="MusicStyle" TargetType="ListViewItem">              
            <Style.Setters>
                <Setter Property="BorderBrush" Value="#111"/>
                <Setter Property="Foreground" Value="GhostWhite" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border Padding="2,0,2,0" Height="50" Width="Auto" Background="Transparent" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0">
                                <!--<Border.ToolTip>
                                        <Border Padding="2">
                                            <Grid x:Name="tooltip_main_grid">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="80" />
                                                    <ColumnDefinition Width="1*" />
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.Column="0" Padding="0,0,10,0">
                                                <Image Style="{Binding Poster}">
                                                    <Image.Effect>
                                                        <DropShadowEffect BlurRadius="15" ShadowDepth="1" Direction="270" RenderingBias="Performance" />
                                                    </Image.Effect>
                                                </Image>
                                                </Border>

                                                <Grid Grid.Column="1">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="20"/>
                                                        <RowDefinition Height="20"/>
                                                        <RowDefinition Height="20"/>
                                                        <RowDefinition Height="20"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="{Binding Artist,StringFormat=Исполнитель: {0}}" Grid.Row="0"/>
                                                    <TextBlock Text="{Binding Title, StringFormat=Заголовок: {0}}" Grid.Row="1" />
                                                    <TextBlock Text="{Binding Album, StringFormat=Альбом: {0}}" Grid.Row="2"/>
                                                    <TextBlock Text="{Binding Duration, StringFormat=Длительность: {0}}" Grid.Row="3"/>
                                                </Grid>
                                            </Grid>
                                    </Border>
                                </Border.ToolTip>-->
                                <Border Height="50"
                                        Width="Auto"
                                        Opacity="{TemplateBinding Opacity}"
                                        x:Name="border"
                                        BorderThickness="0"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Padding="0,0,0,0"
                                        CornerRadius="0"
                                        Margin="0,0,0,0"
                                        Background="{TemplateBinding Background}">    
                                    <ContentPresenter VerticalAlignment="Center" x:Name="content" />
                                </Border>
                               
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="border" Value="1" />
                                    <Setter Property="Background" TargetName="border" Value="#444" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="#111" />
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style x:Key="CollectionsStyle" TargetType="{x:Type ListViewItem}" >
            <Style.Setters>
                <Setter Property="BorderBrush" Value="#111"/>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Height" Value="64" />
                <Setter Property="Width" Value="250"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">                                 
                                <Border Background="{TemplateBinding Background}" Padding="4">
                                    <ContentPresenter VerticalAlignment="Center" />
                                </Border>  
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#444" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RadioStyle" TargetType="{x:Type ListViewItem}" >
            <Style.Setters>
                <Setter Property="BorderBrush" Value="#111"/>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Height" Value="160" />
                <Setter Property="Width" Value="160" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}" >
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="UsersChartStyle" TargetType="{x:Type ListViewItem}" >
            <Style.Setters>
                <Setter Property="BorderBrush" Value="#111"/>
                <Setter Property="Foreground" Value="GhostWhite"/>
                <Setter Property="FontFamily" Value="{StaticResource Font}"/>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Height" Value="80" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border Padding="2,0,2,0" Height="80" Width="Auto" Background="Transparent" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0">
                                <Border Height="80"
                                        Width="Auto"
                                        Opacity="{TemplateBinding Opacity}"
                                        x:Name="border"
                                        BorderThickness="0"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Padding="0,0,0,0"
                                        CornerRadius="0"
                                        Margin="0,0,0,0"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" x:Name="content" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="border" Value="1" />
                                    <Setter Property="Background" TargetName="border" Value="#444" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="#111" />
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="#262626"/>
            <Setter Property="Foreground" Value="GhostWhite"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="{StaticResource Font}"/>
            <Setter Property="Template">
                
                <Setter.Value>
                    <ControlTemplate TargetType="ToolTip">
                        <Border Padding="4" CornerRadius="0">
                            <Border Background="{TemplateBinding Background}" Padding="14,5,14,5" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
                                <ContentPresenter />
                            </Border>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="15"
                                                  Color="#202020"
                                                  Direction="290"
                                                  ShadowDepth="15"
                                                  RenderingBias="Performance"/>
                            </Border.Effect>
                        </Border>
                    </ControlTemplate> 
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Download" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter />
                            
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="Favorite" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter />

                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Combo" TargetType="ComboBox">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <!--#region Slider Progress-->
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#2a4161"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#2a4161"/>
        <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#303030"/>
        <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#202020"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="Black"/>
        <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="Black"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#606060"/>
        <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#606060"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#2a4161"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#585859"/>
        <SolidColorBrush x:Key="SliderThumb.Track.Background.Minimum" Color="#585859"/>
        <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" Visibility="Visible" x:Name="ThumbGrid">
                <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z"
                      Fill="{StaticResource SliderThumb.Static.Background}"
                      Stroke="{StaticResource SliderThumb.Static.Border}"
                      SnapsToDevicePixels="True"
                      Stretch="Fill"
                      StrokeThickness="0"
                      UseLayoutRounding="True"
                      VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stroke="{StaticResource SliderThumb.Static.Border}" SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="m 0,12 C0,12  5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stroke="{StaticResource SliderThumb.Static.Border}" SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" Background="{StaticResource SliderThumb.Track.Background.Minimum}" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Height="8.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-8,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource SliderBar }" Height="8.0" Visibility="Visible"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="8" Visibility="Visible"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ItemsControl.IsMouseOver" Value="true">
                    <Setter TargetName="Thumb" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stroke="{StaticResource SliderThumb.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stroke="{StaticResource SliderThumb.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stroke="{StaticResource SliderThumb.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                    <Border x:Name="TrackBackground" Background="{StaticResource SliderThumb.Track.Background}" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                        <Canvas Margin="-1,-6">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="Seeker" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="SelectionStart" Value="{Binding Minimum, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="SelectionEnd" Value="{Binding Value, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <!--#region Volume Control-->
        <SolidColorBrush x:Key="VolumeControl.Static.Background" Color="#111"/>
        <SolidColorBrush x:Key="VolumeControl.Static.Border" Color="{Binding Source={x:Static SystemParameters.WindowGlassColor}}"/>
        <SolidColorBrush x:Key="VolumeControl.Static.Foreground" Color="#FFE5E5E5"/>
        
        <SolidColorBrush x:Key="VolumeControl.MouseOver.Background" Color="#111"/>
        <SolidColorBrush x:Key="VolumeControl.MouseOver.Border" Color="#777"/>
        
        <SolidColorBrush x:Key="VolumeControl.Pressed.Background" Color="#111"/>
        <SolidColorBrush x:Key="VolumeControl.Pressed.Border" Color="#777"/>
        
        <SolidColorBrush x:Key="VolumeControl.Disabled.Background" Color="#000000"/>
        <SolidColorBrush x:Key="VolumeControl.Disabled.Border" Color="#000000"/>
        
        <SolidColorBrush x:Key="VolumeControl.Track.Background" Color="#111"/>
        <SolidColorBrush x:Key="VolumeControl.Track.Border" Color="#444"/>
        <SolidColorBrush x:Key="VolumeControl.Track.Background.Minimum" Color="#416"/>
        <ControlTemplate x:Key="VolumeControlHorizontalDefault" TargetType="{x:Type Thumb}">
            <DockPanel HorizontalAlignment="Center" UseLayoutRounding="True"  VerticalAlignment="Center" x:Name="grip_panel">
                <!--<Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" 
                      
                      Fill="{StaticResource VolumeControl.Static.Background}"
                      Stroke="{StaticResource VolumeControl.Static.Border}"
                      SnapsToDevicePixels="True"
                      Stretch="Fill" 
                      StrokeThickness="1" 
                      UseLayoutRounding="True"
                      VerticalAlignment="Center" Visibility="Visible"/>-->
                <Rectangle x:Name="grip" Width="10" Height="16" Fill="{StaticResource VolumeControl.Static.Background}" Stroke="{StaticResource VolumeControl.Static.Border}"/>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip_panel" Property="Visibility" Value="Visible" />
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter TargetName="grip_panel" Property="Visibility" Value="Visible" />
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Static.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Static.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="VolumeControlbHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource VolumeControl.Static.Background}" Stroke="{StaticResource VolumeControl.Static.Border}" SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="VolumeControlbHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource VolumeControl.Static.Background}" Stroke="{StaticResource VolumeControl.Static.Border}" SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="VolumeControlSliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" Background="{StaticResource VolumeControl.Track.Background}" BorderBrush="{StaticResource VolumeControl.Track.Border}" BorderThickness="5" Height="10.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-10,-5">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource VolumeControl.Track.Background}" Height="10.0" Visibility="Visible"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource VolumeControlHorizontalDefault}" VerticalAlignment="Center" Width="11"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource VolumeControlHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource VolumeControlHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="VolumeControlVerticalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" x:Name="grip_panel">
                <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource VolumeControl.Static.Background}" Stroke="{StaticResource VolumeControl.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip_panel" Property="Visibility" Value="Visible" />
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter TargetName="grip_panel" Property="Visibility" Value="Visible" />
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="VolumeControlVerticalLeft" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource VolumeControl.Static.Background}" Stroke="{StaticResource VolumeControl.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="VolumeControlVerticalRight" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource VolumeControl.Static.Background}" Stroke="{StaticResource VolumeControl.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource VolumeControl.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="VolumeControlSliderVertical" TargetType="{x:Type Slider}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                    <Border x:Name="TrackBackground" Background="{StaticResource VolumeControl.Track.Background}" BorderBrush="{StaticResource VolumeControl.Track.Border}" BorderThickness="1" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                        <Canvas Margin="-1,-6">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Visible" Width="4.0"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource VolumeControlVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource VolumeControlVerticalLeft}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource VolumeControlVerticalRight}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="VolumeControl" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="SelectionStart" Value="{Binding Minimum, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="SelectionEnd" Value="{Binding Value, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Foreground" Value="{StaticResource VolumeControl.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource VolumeControlSliderHorizontal}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource VolumeControlSliderVertical}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <!--#region MiniSeeker Control-->
        <SolidColorBrush x:Key="MiniSeeker.Static.Background" Color="#2a4161"/>
        <SolidColorBrush x:Key="MiniSeeker.Static.Border" Color="#2a4161"/>
        <SolidColorBrush x:Key="MiniSeeker.Static.Foreground" Color="#999"/>
        <SolidColorBrush x:Key="MiniSeeker.MouseOver.Background" Color="#666"/>
        <SolidColorBrush x:Key="MiniSeeker.MouseOver.Border" Color="#666"/>
        <SolidColorBrush x:Key="MiniSeeker.Pressed.Background" Color="#2a4161"/>
        <SolidColorBrush x:Key="MiniSeeker.Pressed.Border" Color="#2a4161"/>
        <SolidColorBrush x:Key="MiniSeeker.Disabled.Background" Color="#2a4161"/>
        <SolidColorBrush x:Key="MiniSeeker.Disabled.Border" Color="#2a4161"/>
        <SolidColorBrush x:Key="MiniSeeker.Track.Background" Color="Gold"/>
        <SolidColorBrush x:Key="MiniSeeker.Track.Border" Color="#444"/>
        <SolidColorBrush x:Key="MiniSeeker.Track.Background.Minimum" Color="#444"/>
        
        <ControlTemplate x:Key="MiniSeekerHorizontalDefault" TargetType="{x:Type Thumb}">
            <DockPanel HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" x:Name="grip_panel" Visibility="Hidden">
                <Rectangle x:Name="grip" Width="10" Height="5" Fill="{StaticResource MiniSeeker.Static.Background}" Stroke="{StaticResource MiniSeeker.Static.Border}"/>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Static.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Static.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MiniSeekerHorizontalTop" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource MiniSeeker.Static.Background}" Stroke="{StaticResource MiniSeeker.Static.Border}" SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MiniSeekerHorizontalBottom" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource MiniSeeker.Static.Background}" Stroke="{StaticResource MiniSeeker.Static.Border}" SnapsToDevicePixels="True" Stretch="Fill" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MiniSeekerSliderHorizontal" TargetType="{x:Type Slider}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                    <Border x:Name="TrackBackground" Background="{StaticResource MiniSeeker.Track.Background}" BorderBrush="{StaticResource MiniSeeker.Track.Border}" BorderThickness="5" Height="5.0" Margin="0,0" Grid.Row="1" VerticalAlignment="center">
                        <Canvas Margin="-5,-5">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{StaticResource MiniSeeker.Track.Background}" Height="5.0" Visibility="Visible"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="18" OverridesDefaultStyle="True" Template="{StaticResource MiniSeekerHorizontalDefault}" VerticalAlignment="Center" Width="0"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource MiniSeekerHorizontalTop}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource MiniSeekerHorizontalBottom}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MiniSeekerVerticalDefault" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" x:Name="grip_panel">
                <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource MiniSeeker.Static.Background}" Stroke="{StaticResource MiniSeeker.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="grip_panel" Property="Visibility" Value="Visible" />
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter TargetName="grip_panel" Property="Visibility" Value="Visible" />
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MiniSeekerVerticalLeft" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource MiniSeeker.Static.Background}" Stroke="{StaticResource MiniSeeker.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MiniSeekerVerticalRight" TargetType="{x:Type Thumb}">
            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource MiniSeeker.Static.Background}" Stroke="{StaticResource MiniSeeker.Static.Border}" Stretch="Fill"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsDragging" Value="true">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Fill" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Background}"/>
                    <Setter Property="Stroke" TargetName="grip" Value="{StaticResource MiniSeeker.Disabled.Border}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MiniSeekerSliderVertical" TargetType="{x:Type Slider}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                    <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                    <Border x:Name="TrackBackground" Background="{StaticResource VolumeControl.Track.Background}" BorderBrush="{StaticResource MiniSeeker.Track.Border}" BorderThickness="1" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                        <Canvas Margin="-1,-6">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Visible" Width="4.0"/>
                        </Canvas>
                    </Border>
                    <Track x:Name="PART_Track" Grid.Column="1">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource MiniSeekerVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource MiniSeekerVerticalLeft}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb" Value="{StaticResource MiniSeekerVerticalRight}"/>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="true">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="MiniSeeker" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="SelectionStart" Value="{Binding Minimum, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="SelectionEnd" Value="{Binding Value, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="Foreground" Value="{StaticResource MiniSeeker.Static.Foreground}"/>
            <Setter Property="Template" Value="{StaticResource MiniSeekerSliderHorizontal}"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource MiniSeekerSliderVertical}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        <Style x:Key="ProgressLoading" TargetType="ProgressBar">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Grid MinHeight="16" MinWidth="120">
                                <Border
                                    Name="PART_Track"
                                    CornerRadius="2"
                                    Background="Red"
                                    BorderBrush="Transparent"
                                    BorderThickness="1">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" ShadowDepth="1" Direction="290" Color="Gold"/>
                                    </Border.Effect>
                                </Border>
                                <Border
                                    Name="PART_Indicator"
                                    CornerRadius="2"
                                    Background="Gold"
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    HorizontalAlignment="Left">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" ShadowDepth="1" Direction="290" Color="Gold"/>
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>                    
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="TopMostCheck" TargetType="CheckBox">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Image x:Name="image" Source="{StaticResource uncheck}" Width="24" />
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="image" Property="Source" Value="{StaticResource check}"/>
                                    <Setter Property="ToolTip" Value="Не показывать всегда сверху"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="image" Property="Source" Value="{StaticResource uncheck}"/>
                                    <Setter Property="ToolTip" Value="Всегда сверху"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="Check" TargetType="CheckBox">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Image x:Name="image" Source="{StaticResource uncheck}" Width="24" />
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="image" Property="Source" Value="{StaticResource check}"/>
                                    <Setter Property="ToolTip" Value="Убрать"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="image" Property="Source" Value="{StaticResource uncheck}"/>
                                    <Setter Property="ToolTip" Value="Выбрать"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
        <Style x:Key="side_menu_button" TargetType="CheckBox">             
            <Style.Setters>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="ToolTip" Value="Скрыть панель меню" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Image x:Name="image" Source="{StaticResource menu}" Width="32" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Image.RenderTransform>
                                </Image>
                                <ContentPresenter />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ToolTip" Value="Показать панель меню" />
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource rotate_90}" />
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource rotate_0}" />
                                    </Trigger.ExitActions>
                                </Trigger>                                
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                
            </Style.Triggers>
        </Style>
        <Style x:Key="song_panel_poster_check" TargetType="CheckBox">
            <Style.Setters>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="ToolTip" Value="Постер на все окно" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid>
                                <Image x:Name="image" Width="32" RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Image.RenderTransform>
                                </Image>
                                <ContentPresenter />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ToolTip" Value="Убрать" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>

            </Style.Triggers>
        </Style>
        <Style x:Key="poster" TargetType="Image">
            <Setter Property="Source" Value="{x:Null}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlayingMusic.LocalFile}" Value="True">
                    <Setter Property="Source" Value="{StaticResource empty_poster}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding PlayingMusic.LocalFile}" Value="False">
                    <Setter Property="Source" Value="{Binding PlayingMusic.Poster}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="play_button" TargetType="Image">
            <Setter Property="Source" Value="{StaticResource play}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding PlayingMusic.IsPlay}" Value="True">
                    <Setter Property="Source" Value="{StaticResource pause}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding PlayingMusic.IsPlay}" Value="False">
                    <Setter Property="Source" Value="{StaticResource play}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        
        <!--#region  Templates -->
        <DataTemplate x:Key="Music">
            <Border BorderBrush="Transparent" BorderThickness="0" Opacity="0.9" x:Name="item_border" Width="Auto">
                    <Grid Height="48" Background="Transparent" x:Name="lv_item" Width="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="5" />
                        </Grid.ColumnDefinitions>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction 
                              Command="{Binding DataContext.PlayFileFromList, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="border_poster" Background="Transparent">
                            <StackPanel Height="42" VerticalAlignment="Center" x:Name="poster_in_list_panel" Background="Transparent">
                                <!--<StackPanel.Background>
                                    <ImageBrush x:Name="poster_image" ImageSource="{Binding Poster}"/>
                                </StackPanel.Background>-->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="poster_image" Source="{Binding Poster}" Width="42" />
                                
                                <Button Style="{StaticResource PlayListButtons}" x:Name="play_btn" Click="MakeItemSelected" Visibility="Hidden">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{Binding DataContext.PlayFile, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                                          CommandParameter="{Binding SelectedItem, ElementName=LV}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <Grid Width="44" Height="44">
                                        <Image Source="{StaticResource playlist_play}" x:Name="bg_image" Width="34">
                                            <Image.Effect>
                                               <DropShadowEffect x:Name="play_effect" BlurRadius="15" Direction="270" ShadowDepth="1"/>
                                            </Image.Effect>
                                        </Image>
                                        <StackPanel x:Name="visualisation" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                                            <Grid x:Name="equilizer" Margin="0,0,0,6" Opacity="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="6"/>
                                                    <ColumnDefinition Width="6"/>
                                                    <ColumnDefinition Width="6"/>
                                                    <ColumnDefinition Width="6"/>
                                                    <ColumnDefinition Width="6"/>
                                                    <ColumnDefinition Width="6"/>
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.Column="0" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_1"/>
                                                <Border Grid.Column="1" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_2"/>
                                                <Border Grid.Column="2" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_3"/>
                                                <Border Grid.Column="3" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_4"/>
                                                <Border Grid.Column="4" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_5"/>
                                                <Border Grid.Column="5" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_6"/>
                                            </Grid>
                                        </StackPanel>
                                    </Grid>
                                </Button>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Grid.Column="2" HorizontalAlignment="Left" x:Name="track_detail" Opacity="1" VerticalAlignment="Center">
                            <Grid Width="Auto">
                                <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300" />
                                <ColumnDefinition Width="300" />
                                <ColumnDefinition Width="300" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Title}" TextWrapping="Wrap" Grid.Column="0" Style="{StaticResource Title}"/>
                            <TextBlock Text="{Binding Artist}" TextWrapping="Wrap" Grid.Column="1" Style="{StaticResource Artist}"/>
                            <TextBlock Text="{Binding Album}" TextWrapping="Wrap" Grid.Column="2" Style="{StaticResource Album}"/>
                        </Grid>
                        </StackPanel>
                        <StackPanel Grid.Column="3" Background="Transparent" VerticalAlignment="Center">
                            <ProgressBar x:Name="load_progress"
                                                     Height="18" Maximum="100" 
                                                     Value="{Binding LoadProgress}"  IsIndeterminate="True"
                                                     SmallChange="1" Background="#262626" Foreground="#2a4161" BorderBrush="Transparent"/>
                        </StackPanel>
                        <StackPanel Grid.Column="4" Background="Transparent" VerticalAlignment="Center">
                            <Button x:Name="download" Width="32" Height="32" Visibility="Hidden" Style="{StaticResource Download}" Click="MakeItemSelected">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding DataContext.DownloadMusic, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image Width="24" x:Name="load_state" Source="{x:Null}" />
                            </Button>
                        </StackPanel>
                        <StackPanel Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="1" Background="Transparent" x:Name="fav_panel" Visibility="Collapsed">
                            <Button Width="32" Height="32"
                                                x:Name="add_to_fav"
                                                Style="{StaticResource Favorite}" Click="MakeItemSelected" Visibility="Visible">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding DataContext.AddToFavoriteList, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Image Width="16" x:Name="like_state" Source="{x:Null}">
                                    <Image.Effect>
                                        <DropShadowEffect BlurRadius="5" ShadowDepth="1" Direction="290" Color="Gold"/>
                                    </Image.Effect>
                                </Image>
                            </Button>
                        </StackPanel>
                        <TextBlock Grid.Column="6" x:Name="song_duration" Text="{Binding Duration}" Style="{StaticResource Duration}" HorizontalAlignment="Right"/>
                        <TextBlock Grid.Column="7" Text="{Binding Download}" Visibility="Hidden" Style="{StaticResource Time}"/>
                    </Grid>
                </Border>                
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding LocalFile}" Value="True">
                    <Setter TargetName="poster_image" Property="Source" Value="{StaticResource empty_poster}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPlay}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="play_anim">
                            <Storyboard x:Name="play_anim_sb">
                                <DoubleAnimation Storyboard.TargetName="eq_1" Storyboard.TargetProperty="(FrameworkElement.Height)" To="32" Duration="0:0:0.3" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_2" Storyboard.TargetProperty="(FrameworkElement.Height)" To="24" Duration="0:0:0.2" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_3" Storyboard.TargetProperty="(FrameworkElement.Height)" To="32" Duration="0:0:0.4" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_4" Storyboard.TargetProperty="(FrameworkElement.Height)" To="24" Duration="0:0:0.1" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_5" Storyboard.TargetProperty="(FrameworkElement.Height)" To="32" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_6" Storyboard.TargetProperty="(FrameworkElement.Height)" To="24" Duration="0:0:0.2" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <Setter TargetName="song_duration" Property="Text" Value="{Binding Text, ElementName=current_time}" />
                    <Setter TargetName="lv_item" Property="Background" Value="#444" />
                    <Setter TargetName="lv_item" Property="Opacity" Value="1" />
                    <Setter TargetName="play_btn" Property="Visibility" Value="Visible" />
                    <Setter TargetName="bg_image" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="item_border" Property="BorderBrush" Value="#111"/>
                    <Setter TargetName="item_border" Property="BorderThickness" Value="0"/>
                    <Setter TargetName="item_border" Property="Opacity" Value="1"/>
                    <Setter TargetName="bg_image" Property="Source" Value="{StaticResource playlist_pause}" />
                    <Setter TargetName="bg_image" Property="Width" Value="37" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPaused}" Value="True">
                    <Setter TargetName="lv_item" Property="Background" Value="#333" />
                    <Setter TargetName="play_btn" Property="Visibility" Value="Visible" />
                    <Setter TargetName="visualisation" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="bg_image" Property="Visibility" Value="Visible" />
                    <Setter TargetName="item_border" Property="BorderBrush" Value="#111"/>
                    <Setter TargetName="item_border" Property="BorderThickness" Value="0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPaused}" Value="False">
                    <Setter TargetName="play_btn" Property="Visibility" Value="Visible" />
                    <Setter TargetName="visualisation" Property="Visibility" Value="Visible" />
                    <Setter TargetName="bg_image" Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPlay}" Value="False">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="play_anim" />
                    </DataTrigger.EnterActions>
                    <Setter TargetName="song_duration" Property="Text" Value="{Binding Duration}" />
                    <Setter Property="Control.BorderBrush" Value="#111"/>
                    <Setter Property="Control.BorderThickness" Value="0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Liked}" Value="True">
                    <Setter TargetName="like_state" Property="Source" Value="{StaticResource like}" />
                    <Setter TargetName="add_to_fav" Property="ToolTip" Value="Удалить из ''Мне нравится''" />
                    <!--<Setter TargetName="fav_panel" Property="Visibility" Value="Visible" />-->
                </DataTrigger>
                <DataTrigger Binding="{Binding Liked}" Value="False">
                    <Setter TargetName="like_state" Property="Source" Value="{StaticResource not_like}" />
                    <Setter TargetName="add_to_fav" Property="ToolTip" Value="Добавить в ''Мне нравится''" />
                    <Setter TargetName="add_to_fav" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Location}" Value="Local">
                    <Setter TargetName="fav_panel" Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                    <Setter TargetName="add_to_fav" Property="Visibility" Value="Visible" />
                    <Setter TargetName="play_btn" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="visualisation" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="bg_image" Property="Visibility" Value="Visible" />
                    <Setter TargetName="load_state" Property="Source" Value="{StaticResource save}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Location}" Value="Internet">
                    <Setter TargetName="fav_panel" Property="Visibility" Value="Visible" />
                    <Setter TargetName="download" Property="Visibility" Value="Visible" />
                    <Setter TargetName="download" Property="ToolTip" Value="Скачать трек" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Download}" Value="True">
                    <Setter TargetName="load_progress" Property="Visibility" Value="Visible" />
                    <Setter TargetName="load_progress" Property="Value" Value="{Binding LoadProgress}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Download}" Value="False">
                    <Setter TargetName="load_progress" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="load_progress" Property="Value" Value="0"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="Collections">              
            <VirtualizingStackPanel Opacity="0.9" Background="Transparent" Orientation="Horizontal">                              
                <Image Source="{Binding Poster}" Width="64" />
                <TextBlock Width="128" Text="{Binding Title}" Style="{StaticResource Title}" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"/>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction
                            Command="{Binding DataContext.Parse, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>                              
            </VirtualizingStackPanel>
        </DataTemplate>
        <DataTemplate x:Key="Radio">              
            <Border x:Name="panel" VerticalAlignment="Center" HorizontalAlignment="Center">
              <DockPanel x:Name="poster_panel" Width="140" Height="140">
                    <Grid>
                        <Image Grid.Row="0" x:Name="poster_image" Source="{Binding Poster}" Stretch="UniformToFill" Panel.ZIndex="1" >
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="15" ShadowDepth="1" Direction="30" />
                            </Image.Effect>
                        </Image>
                        <StackPanel x:Name="visualisation" VerticalAlignment="Bottom" HorizontalAlignment="Center" Panel.ZIndex="2">
                            <Grid x:Name="equilizer" Margin="0,0,0,50" Opacity="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="6"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_1"/>
                                <Border Grid.Column="1" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_2"/>
                                <Border Grid.Column="2" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_3"/>
                                <Border Grid.Column="3" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_4"/>
                                <Border Grid.Column="4" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_5"/>
                                <Border Grid.Column="5" Width="4" Height="0" Background="{StaticResource BarColor}" Padding="4" VerticalAlignment="Bottom" x:Name="eq_6"/>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </DockPanel>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding DataContext.PlayRadio, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>   
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsPlay}" Value="True">
                    <DataTrigger.EnterActions>
                        <!--<BeginStoryboard x:Name="play_anim">
                            <Storyboard x:Name="play_anim_sb">
                                <DoubleAnimation Storyboard.TargetName="eq_1" Storyboard.TargetProperty="(FrameworkElement.Height)" To="32" Duration="0:0:0.3" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_2" Storyboard.TargetProperty="(FrameworkElement.Height)" To="24" Duration="0:0:0.2" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_3" Storyboard.TargetProperty="(FrameworkElement.Height)" To="32" Duration="0:0:0.4" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_4" Storyboard.TargetProperty="(FrameworkElement.Height)" To="24" Duration="0:0:0.1" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_5" Storyboard.TargetProperty="(FrameworkElement.Height)" To="32" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="eq_6" Storyboard.TargetProperty="(FrameworkElement.Height)" To="24" Duration="0:0:0.2" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>-->
                        <BeginStoryboard x:Name="radio_play">
                            <Storyboard x:Name="radio_play_vis">
                                <DoubleAnimation Storyboard.TargetName="poster_panel" Storyboard.TargetProperty="(FrameworkElement.Width)" From="140" To="150" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                <DoubleAnimation Storyboard.TargetName="poster_panel" Storyboard.TargetProperty="(FrameworkElement.Height)" From="140" To="150" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <Setter TargetName="panel" Property="Background" Value="Transparent" />    
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPlay}" Value="False">
                    <DataTrigger.EnterActions>
                        <!--<StopStoryboard BeginStoryboardName="play_anim" />-->
                        <StopStoryboard BeginStoryboardName="radio_play" />
                    </DataTrigger.EnterActions>
                    <Setter Property="Control.BorderBrush" Value="#111"/>
                    <Setter Property="Control.BorderThickness" Value="0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                    <Setter TargetName="panel" Property="Background" Value="Transparent"/>
                    <DataTrigger.EnterActions>                           
                        <BeginStoryboard x:Name="hover">
                            <Storyboard>                                     
                                <DoubleAnimation 
                            Storyboard.TargetName="poster_panel"
                            Storyboard.TargetProperty="(FrameworkElement.Height)"
                            From="140" To="160"
                            Duration="0:0:0.1">
                                </DoubleAnimation>
                                <DoubleAnimation 
                            Storyboard.TargetName="poster_panel"
                            Storyboard.TargetProperty="(FrameworkElement.Width)"
                            From="140" To="160"
                            Duration="0:0:0.1">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="False">
                    <Setter TargetName="poster_panel" Property="Height" Value="140" />
                    <Setter TargetName="poster_panel" Property="Width" Value="140" />
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="hover" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="UsersChart">
            <Border BorderBrush="Transparent" Background="Transparent" BorderThickness="0" Opacity="0.9" Width="Auto">
                <Grid Width="1200" Height="80">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="{Binding Poster}" Width="64" Height="64" Margin="5"/>
                    <TextBlock Grid.Column="1" Text="{Binding Title}" Style="{StaticResource Title}" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap"/>
                </Grid>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction
                            Command="{Binding DataContext.OpenUsersChart, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
        </DataTemplate>
        <!--#endregion-->
        
    </Application.Resources>
</Application>
